$version Generated by VerilatedVcd $end
$date Wed Nov 30 09:38:56 2011
 $end
$timescale 1ns $end

 $scope module TOP $end
  $var wire 40 "G data_in [39:0] $end
  $var wire 128 "P data_out [127:0] $end
  $var wire  1 "O dma_rdreq $end
  $var wire  1 "M enable_sfp $end
  $var wire 13 "L rd_address [12:0] $end
  $var wire  1 "I rd_clock $end
  $var wire  1 "K reset $end
  $var wire 14 "T rx_ring_wptr [13:0] $end
  $var wire  1 "J wr_clock $end
  $var wire  1 "N xcvr_rx_ready $end
  $scope module v $end
   $var wire 66 "/ blocksync_data_out [65:0] $end
   $var wire  1 ( blocksync_lock $end
   $var wire 40 "G data_in [39:0] $end
   $var wire 128 "P data_out [127:0] $end
   $var wire  1 "O dma_rdreq $end
   $var wire  1 "M enable_sfp $end
   $var wire 66 "9 gearbox_data_out [65:0] $end
   $var wire  1 "< gearbox_valid $end
   $var wire 13 "L rd_address [12:0] $end
   $var wire  1 "I rd_clock $end
   $var wire  1 "K reset $end
   $var wire  1 "U rx_cbuf_rdena $end
   $var wire  1 "O rx_cbuf_rdreq $end
   $var wire  1 "U rx_cbuf_wrena $end
   $var wire  1 2 rx_cbuf_wrreq $end
   $var wire 14 "T rx_ring_wptr [13:0] $end
   $var wire  1 "J wr_clock $end
   $var wire  1 "N xcvr_rx_ready $end
   $scope module blocksync $end
    $var wire  1 ( block_lock $end
    $var wire  1 "J clk $end
    $var wire 66 "9 data_in [65:0] $end
    $var wire 66 "/ data_out [65:0] $end
    $var wire  8 - offset [7:0] $end
    $var wire  1 "K reset $end
    $var wire 66 "3 rx_b1 [65:0] $end
    $var wire 66 "6 rx_b2 [65:0] $end
    $var wire 66 "/ rx_coded [65:0] $end
    $var wire 32 ) sh_cnt [31:0] $end
    $var wire 32 * sh_invalid_cnt [31:0] $end
    $var wire  1 "2 sh_valid $end
    $var wire  1 , slip_done $end
    $var wire  3 Z state [2:0] $end
    $var wire  1 + test_sh $end
    $var wire  1 "< valid $end
   $upscope $end
   $scope module gearbox $end
    $var wire  1 "J clk_in $end
    $var wire 40 "G data_in [39:0] $end
    $var wire 66 "9 data_out [65:0] $end
    $var wire  1 "< data_valid $end
    $var wire  1 "K reset $end
    $var wire 66 "> sr0 [65:0] $end
    $var wire 66 "A sr1 [65:0] $end
    $var wire  7 "= state [6:0] $end
    $var wire  1 "D valid $end
   $upscope $end
   $scope module rx_cbuf $end
    $var wire 66 "/ data_in [65:0] $end
    $var wire 128 "P data_out [127:0] $end
    $var wire 13 "L rd_address [12:0] $end
    $var wire  1 "I rd_clock $end
    $var wire  1 "U rdena $end
    $var wire  1 "O rdreq $end
    $var wire  1 "K reset $end
    $var wire  1 j rx_almost_empty $end
    $var wire  1 \ rx_almost_full $end
    $var wire  1 / rx_cbuf_rdena $end
    $var wire  1 . rx_cbuf_wrena $end
    $var wire  1 i rx_empty $end
    $var wire  1 [ rx_full $end
    $var wire 14 "T rx_ring_wptr [13:0] $end
    $var wire  1 "J wr_clock $end
    $var wire  1 "U wrena $end
    $var wire  1 2 wrreq $end
    $scope module rx_cbuf $end
     $var wire 66 "/ data_in [65:0] $end
     $var wire 66 4 data_in_r [65:0] $end
     $var wire 66 7 data_in_rr [65:0] $end
     $var wire 66 : data_in_rrr [65:0] $end
     $var wire 128 "P data_out [127:0] $end
     $var wire  1 k data_out_sel $end
     $var wire  1 ? data_out_sel_r $end
     $var wire  1 @ data_out_sel_rr $end
     $var wire 128 } data_ring_data_out [127:0] $end
     $var wire 13 "L rd_address [12:0] $end
     $var wire  1 "I rd_clk $end
     $var wire  1 "K reset $end
     $var wire 128 y sync_ring_data_out [127:0] $end
     $var wire  8 0 sync_ring_rd_address [7:0] $end
     $var wire 14 3 wr_address [13:0] $end
     $var wire  1 "J wr_clk $end
     $var wire  1 . wrena $end
     $var wire  1 2 wrreq $end
     $var wire  1 = wrreq_r $end
     $var wire  1 > wrreq_rr $end
     $scope module data_ring $end
      $var wire 64 P data [63:0] $end
      $var wire 128 } q [127:0] $end
      $var wire 13 "L rdaddress [12:0] $end
      $var wire  1 "I rdclock $end
      $var wire  1 "V rden $end
      $var wire 128 } sub_wire0 [127:0] $end
      $var wire 14 3 wraddress [13:0] $end
      $var wire  1 "J wrclock $end
      $var wire  1 ' wren $end
      $scope module altsyncram_component $end
       $var wire 14 3 address_a [13:0] $end
       $var wire 13 "L address_b [12:0] $end
       $var wire  1 "J clock0 $end
       $var wire  1 "I clock1 $end
       $var wire  1 "V cs_a $end
       $var wire  1 "V cs_b $end
       $var wire 64 P data_a [63:0] $end
       $var wire 64 "\ data_a_out [63:0] $end
       $var wire 128 "+ data_b_out [127:0] $end
       $var wire 32 Y i5 [31:0] $end
       $var wire  1 "V oe_a $end
       $var wire  1 "V oe_b $end
       $var wire 32 X port_a_bit_count_low [31:0] $end
       $var wire 128 "+ q_b [127:0] $end
       $var wire 64 R temp_wa [63:0] $end
       $var wire 128 T temp_wb [127:0] $end
       $var wire  1 ' wren_a $end
       $var wire  1 "[ wren_b $end
      $upscope $end
     $upscope $end
     $scope module gen_wr_addr $end
      $var wire 14 3 addr_out [13:0] $end
      $var wire  1 "J clk_in $end
      $var wire  1 . ena $end
      $var wire  1 2 incr $end
      $var wire 14 ] next_address [13:0] $end
      $var wire  1 "K reset $end
      $scope module sta $end
       $var wire  1 "J clk $end
       $var wire 14 ] ext_read_addr [13:0] $end
       $var wire 14 D ext_read_addr_r [13:0] $end
       $var wire 14 3 int_read_addr [13:0] $end
       $var wire 14 B int_read_addr_r [13:0] $end
       $var wire 14 C int_read_addr_rr [13:0] $end
       $var wire  6 A pgn [5:0] $end
       $var wire  1 "K reset $end
      $upscope $end
     $upscope $end
     $scope module sync_ring $end
      $var wire  2 E data_in [1:0] $end
      $var wire 128 y data_out [127:0] $end
      $var wire 64 "% data_out_bot [63:0] $end
      $var wire 64 "# data_out_top [63:0] $end
      $var wire  8 0 rd_address [7:0] $end
      $var wire  1 "I rd_clock $end
      $var wire 14 3 wr_address [13:0] $end
      $var wire  1 "J wr_clock $end
      $var wire  1 1 wren $end
      $scope module bot_half $end
       $var wire  2 E data [1:0] $end
       $var wire  1 "J inclock $end
       $var wire  1 "I outclock $end
       $var wire 64 "% q [63:0] $end
       $var wire  8 0 rdaddress [7:0] $end
       $var wire 64 "% sub_wire0 [63:0] $end
       $var wire 13 $ wraddress [12:0] $end
       $var wire  1 & wren $end
       $scope module altsyncram_component $end
        $var wire 13 $ address_a [12:0] $end
        $var wire  8 0 address_b [7:0] $end
        $var wire  1 "J clock0 $end
        $var wire  1 "I clock1 $end
        $var wire  1 "V cs_a $end
        $var wire  1 "V cs_b $end
        $var wire  2 E data_a [1:0] $end
        $var wire  2 "Z data_a_out [1:0] $end
        $var wire 64 ") data_b_out [63:0] $end
        $var wire 32 O i5 [31:0] $end
        $var wire  1 "V oe_a $end
        $var wire  1 "V oe_b $end
        $var wire 32 N port_a_bit_count_low [31:0] $end
        $var wire 64 ") q_b [63:0] $end
        $var wire  2 K temp_wa [1:0] $end
        $var wire 64 L temp_wb [63:0] $end
        $var wire  1 & wren_a $end
        $var wire  1 "Y wren_b $end
       $upscope $end
      $upscope $end
      $scope module top_half $end
       $var wire  2 E data [1:0] $end
       $var wire  1 "J inclock $end
       $var wire  1 "I outclock $end
       $var wire 64 "# q [63:0] $end
       $var wire  8 0 rdaddress [7:0] $end
       $var wire 64 "# sub_wire0 [63:0] $end
       $var wire 13 # wraddress [12:0] $end
       $var wire  1 % wren $end
       $scope module altsyncram_component $end
        $var wire 13 # address_a [12:0] $end
        $var wire  8 0 address_b [7:0] $end
        $var wire  1 "J clock0 $end
        $var wire  1 "I clock1 $end
        $var wire  1 "V cs_a $end
        $var wire  1 "V cs_b $end
        $var wire  2 E data_a [1:0] $end
        $var wire  2 "X data_a_out [1:0] $end
        $var wire 64 "' data_b_out [63:0] $end
        $var wire 32 J i5 [31:0] $end
        $var wire  1 "V oe_a $end
        $var wire  1 "V oe_b $end
        $var wire 32 I port_a_bit_count_low [31:0] $end
        $var wire 64 "' q_b [63:0] $end
        $var wire  2 F temp_wa [1:0] $end
        $var wire 64 G temp_wb [63:0] $end
        $var wire  1 % wren_a $end
        $var wire  1 "W wren_b $end
       $upscope $end
      $upscope $end
     $upscope $end
    $upscope $end
    $scope module usedw_calc $end
     $var wire  1 j almost_empty $end
     $var wire  1 j almost_empty_reg $end
     $var wire  1 \ almost_full $end
     $var wire  1 \ almost_full_reg $end
     $var wire 14 _ clock_crossed_rdcounter [13:0] $end
     $var wire 14 ` clock_crossed_rdcounter_prev [13:0] $end
     $var wire 14 _ clock_crossed_rptr [13:0] $end
     $var wire 14 "T clock_crossed_wptr [13:0] $end
     $var wire 14 n clock_crossed_wrcounter [13:0] $end
     $var wire 14 o clock_crossed_wrcounter_prev [13:0] $end
     $var wire  1 i empty $end
     $var wire  1 i empty_reg $end
     $var wire  1 [ full $end
     $var wire  1 [ full_reg $end
     $var wire  1 "I rdclock $end
     $var wire 14 m rdcounter [13:0] $end
     $var wire  1 / rdena $end
     $var wire  1 "O rdreq $end
     $var wire 14 l rdusedqwords [13:0] $end
     $var wire 14 l rdusedqwords_reg [13:0] $end
     $var wire 14 a reads_this_write_cycle [13:0] $end
     $var wire 14 a reads_this_write_cycle_delay [13:0] $end
     $var wire  1 "K reset $end
     $var wire  1 "J wrclock $end
     $var wire 14 "E wrcounter [13:0] $end
     $var wire  1 . wrena $end
     $var wire 14 p writes_this_read_cycle [13:0] $end
     $var wire 14 p writes_this_read_cycle_delay [13:0] $end
     $var wire  1 2 wrreq $end
     $var wire 14 ^ wrusedqwords [13:0] $end
     $var wire 14 ^ wrusedqwords_reg [13:0] $end
     $scope module rdcounter_to_wrclock $end
      $var wire 14 m data [13:0] $end
      $var wire 14 x gray_data [13:0] $end
      $var wire 32 h i_out [31:0] $end
      $var wire 32 e i_shift [31:0] $end
      $var wire  1 "I inclock $end
      $var wire  1 / inena $end
      $var wire  1 "J outclock $end
      $var wire  1 "V outena $end
      $var wire 14 g partial_xor [13:0] $end
      $var wire 14 _ q [13:0] $end
      $var wire 14 _ q_reg [13:0] $end
      $var wire  1 "K reset $end
      $var wire 14 b shift_register(0) [13:0] $end
      $var wire 14 c shift_register(1) [13:0] $end
      $var wire 14 d shift_register(2) [13:0] $end
      $var wire  1 "^ zeros $end
      $scope module unnamedblk1 $end
       $var wire 32 f i [31:0] $end
      $upscope $end
     $upscope $end
     $scope module reads_this_write_cycle_delayer $end
      $var wire  1 "J clock $end
      $var wire 14 a data [13:0] $end
      $var wire  1 "V ena $end
      $var wire 32 "` i [31:0] $end
      $var wire 14 a q [13:0] $end
      $var wire  1 "K reset $end
     $upscope $end
     $scope module wrcounter_to_rdclock $end
      $var wire 14 "E data [13:0] $end
      $var wire 14 "F gray_data [13:0] $end
      $var wire 32 w i_out [31:0] $end
      $var wire 32 t i_shift [31:0] $end
      $var wire  1 "J inclock $end
      $var wire  1 . inena $end
      $var wire  1 "I outclock $end
      $var wire  1 "V outena $end
      $var wire 14 v partial_xor [13:0] $end
      $var wire 14 n q [13:0] $end
      $var wire 14 n q_reg [13:0] $end
      $var wire  1 "K reset $end
      $var wire 14 q shift_register(0) [13:0] $end
      $var wire 14 r shift_register(1) [13:0] $end
      $var wire 14 s shift_register(2) [13:0] $end
      $var wire  1 "^ zeros $end
      $scope module unnamedblk1 $end
       $var wire 32 u i [31:0] $end
      $upscope $end
     $upscope $end
     $scope module writes_this_read_cycle_delayer $end
      $var wire  1 "I clock $end
      $var wire 14 p data [13:0] $end
      $var wire  1 "V ena $end
      $var wire 32 "_ i [31:0] $end
      $var wire 14 p q [13:0] $end
      $var wire  1 "K reset $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000000 #
b0000000000000 $
0%
0&
0'
0(
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
0+
0,
b00000000 -
01
b00000000 0
1.
0/
02
b000000000000000000000000000000000000000000000000000000000000000000 4
b000000000000000000000000000000000000000000000000000000000000000000 7
b000000000000000000000000000000000000000000000000000000000000000000 :
0=
0>
0?
0@
b000000 A
b00000000000000 B
b00000000000000 C
b00000000000000 D
b00 F
b0000000000000000000000000000000000000000000000000000000000000000 G
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00 E
b00 K
b0000000000000000000000000000000000000000000000000000000000000000 L
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b0000000000000000000000000000000000000000000000000000000000000000 P
b00000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 R
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 T
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b000 Z
b00000000000000 ]
b00000000000000 ^
0[
0\
b00000000000000 `
b00000000000000 b
b00000000000000 c
b00000000000000 d
b00000000000000 _
b00000000000000000000000000000000 e
b00000000000000000000000000000011 f
b00000000000000 g
b00000000000000000000000000000000 h
b00000000000000 a
0k
b00000000000000 l
1i
1j
b00000000000000 m
b00000000000000 o
b00000000000000 q
b00000000000000 r
b00000000000000 s
b00000000000000 n
b00000000000000000000000000000000 t
b00000000000000000000000000000011 u
b00000000000000 v
b00000000000000000000000000000000 w
b00000000000000 x
b00000000000000 p
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 y
b0000000000000000000000000000000000000000000000000000000000000000 "#
b0000000000000000000000000000000000000000000000000000000000000000 "'
b0000000000000000000000000000000000000000000000000000000000000000 "%
b0000000000000000000000000000000000000000000000000000000000000000 ")
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 }
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 "+
0"2
b000000000000000000000000000000000000000000000000000000000000000000 "3
b000000000000000000000000000000000000000000000000000000000000000000 "6
b000000000000000000000000000000000000000000000000000000000000000000 "/
b0000000 "=
b000000000000000000000000000000000000000000000000000000000000000000 ">
b000000000000000000000000000000000000000000000000000000000000000000 "A
0"D
b000000000000000000000000000000000000000000000000000000000000000000 "9
0"<
b00000000000000 "E
b00000000000000 "F
1"M
1"N
b0000000000000000000000000000000000000000 "G
1"U
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 "P
b0000000000000 "L
0"O
b00000000000000 "T
0"I
0"J
1"K
0"W
b00 "X
0"Y
b00 "Z
0"[
b0000000000000000000000000000000000000000000000000000000000000000 "\
0"^
b00000000000000000000000000000000 "_
1"V
b00000000000000000000000000000000 "`
#1
b000001 A
1"I
1"J
#2
0"I
0"J
#3
b00000000010000 C
1"I
1"J
#4
0"I
0"J
#5
b00000000010000 B
1"I
1"J
#6
0"I
0"J
#7
b0000000010000 #
b0000000010000 $
b00000000010000 3
1"I
1"J
#8
0"I
0"J
#9
1"I
1"J
#10
0"I
0"J
#11
b001 Z
b00000000000000000000000000000010 e
b00000000000000000000000000001110 h
b00000000000000000000000000000010 t
b00000000000000000000000000001110 w
b0000001 "=
1"I
1"J
0"K
#12
b0101010101010101010101010101010111100001 "G
0"I
0"J
#13
b0000010 "=
b000000000000000000000000000000000000000000000000000001010101010101 ">
b010101010101010101111000010000000000000000000000000000000000000000 "A
1"D
1"I
1"J
#14
b1111001010101000011100000000000001011011 "G
0"I
0"J
#15
1+
b0000011 "=
b000000000000000000000000000000000000000000000000000000000000000000 ">
b010101010101111100101010100001110000000000000101101101010101010101 "A
0"D
b010101010101010101111000010000000000000000000000000000000000000000 "9
1"<
1"I
1"J
#16
b1001000011010001001110001000001111100011 "G
0"I
0"J
#17
0+
b010 Z
b010101010101010101111000010000000000000000000000000000000000000000 "3
b0000100 "=
b000000000000000000000000000000000000001001000011010001001110001000 ">
b001111100011111100101010100001110000000000000101101101010101010101 "A
1"D
0"<
1"I
1"J
#18
b1011100000101011000101100010101101111011 "G
0"I
0"J
#19
b00000000000000000000000000000001 )
b00000000000000000000000000000001 *
1+
b100 Z
b0000101 "=
b000000000000000000000000000000000000000000000000000000000000000010 ">
b111000001010110001011000101011011110111001000011010001001110001000 "A
b001111100011111100101010100001110000000000000101101101010101010101 "9
1"<
1"I
1"J
#20
b1001010111100010001100000010111000000010 "G
0"I
0"J
#21
b00000000000000000000000000000010 )
b00000000000000000000000000000010 *
b001111100011111100101010100001110000000000000101101101010101010101 "3
b010101010101010101111000010000000000000000000000000000000000000000 "6
b010101010101010101111000010000000000000000000000000000000000000000 "/
b0000110 "=
b000000000000000000000000000000000000000000000000000000000000000000 ">
b111000001010110001011000100101011110001000110000001011100000001010 "A
0"D
b111000001010110001011000101011011110111001000011010001001110001000 "9
1"I
1"J
#22
b0010100100100100101010111101101110110100 "G
0"I
0"J
#23
b00000000000000000000000000000011 )
b00000000000000000000000000000011 *
b010101010101010101111000010000000000000000000000000000000000000000 4
b0101010101010101011110000100000000000000000000000000000000000000 P
b111000001010110001011000101011011110111001000011010001001110001000 "3
b001111100011111100101010100001110000000000000101101101010101010101 "6
b001111100011111100101010100001110000000000000101101101010101010101 "/
b0000111 "=
b000000000000000000000000000000000000000000000000000010100100100100 ">
b101010111101101110110100100101011110001000110000001011100000001010 "A
1"D
0"<
1"I
1"J
#24
b0011101110110110110001001011001111111001 "G
0"I
0"J
#25
b00000000000000000000000000000100 )
b00000000000000000000000000000100 *
b001111100011111100101010100001110000000000000101101101010101010101 4
b010101010101010101111000010000000000000000000000000000000000000000 7
b01 E
b0011111000111111001010101000011100000000000001011011010101010101 P
b0001000 "=
b000000000000000000000000000000000000000000000000000000000000000000 ">
b101010111100111011101101101100010010110011111110010010100100100100 "A
0"D
b101010111101101110110100100101011110001000110000001011100000001010 "9
1"<
1"I
1"J
#26
b0101001011100110101110001111010111000110 "G
0"I
0"J
#27
b00000000000000000000000000000101 )
b00000000000000000000000000000101 *
b001111100011111100101010100001110000000000000101101101010101010101 7
b010101010101010101111000010000000000000000000000000000000000000000 :
1"2
b101010111101101110110100100101011110001000110000001011100000001010 "3
b111000001010110001011000101011011110111001000011010001001110001000 "6
b111000001010110001011000101011011110111001000011010001001110001000 "/
b0001001 "=
b000000000000000000000000000000000000010100101110011010111000111101 ">
b011100011000111011101101101100010010110011111110010010100100100100 "A
1"D
0"<
1"I
1"J
#28
b1100101010110001000110001101101100111111 "G
0"I
0"J
#29
b00000000000000000000000000000110 )
b00000000000000000000000000000110 *
b111000001010110001011000101011011110111001000011010001001110001000 4
b001111100011111100101010100001110000000000000101101101010101010101 :
b00 E
b1110000010101100010110001010110111101110010000110100010011100010 P
b0001010 "=
b000000000000000000000000000000000000000000000000000000000000001100 ">
b101010110001000110001101101100111111010100101110011010111000111101 "A
b011100011000111011101101101100010010110011111110010010100100100100 "9
1"<
1"I
1"J
#30
b0010011001111010010000011100101100011000 "G
0"I
0"J
#31
b00000000000000000000000000000111 )
b00000000000000000000000000000111 *
b111000001010110001011000101011011110111001000011010001001110001000 7
0"2
b011100011000111011101101101100010010110011111110010010100100100100 "3
b101010111101101110110100100101011110001000110000001011100000001010 "6
b101010111101101110110100100101011110001000110000001011100000001010 "/
b0001011 "=
b000000000000000000000000000000000000000000000000000000000000000000 ">
b000000000000000000000000100110011110100100000111001011000110001100 "A
0"D
b101010110001000110001101101100111111010100101110011010111000111101 "9
1"I
1"J
#32
b1001110110001000100011110011110100010011 "G
0"I
0"J
#33
b00000000000000000000000000001000 )
b00000000000000000000000000001000 *
b101010111101101110110100100101011110001000110000001011100000001010 4
b111000001010110001011000101011011110111001000011010001001110001000 :
b10 E
b1010101111011011101101001001010111100010001100000010111000000010 P
1"2
b101010110001000110001101101100111111010100101110011010111000111101 "3
b011100011000111011101101101100010010110011111110010010100100100100 "6
b011100011000111011101101101100010010110011111110010010100100100100 "/
b0001100 "=
b000000000000000000000000000000000000000000000000100111011000100010 ">
b001111001111010001001100100110011110100100000111001011000110001100 "A
1"D
0"<
1"I
1"J
#34
b1111101011110001100001111111011101100011 "G
0"I
0"J
#35
b00000000000000000000000000001001 )
b00000000000000000000000000001001 *
b011100011000111011101101101100010010110011111110010010100100100100 4
b101010111101101110110100100101011110001000110000001011100000001010 7
b00 E
b0111000110001110111011011011000100101100111111100100101001001001 P
b0001101 "=
b000000000000000000000000000000000000000000000000000000000000000000 ">
b001111001111101011110001100001111111011101100011100111011000100010 "A
0"D
b001111001111010001001100100110011110100100000111001011000110001100 "9
1"<
1"I
1"J
#36
b0011010100111000100000110000001001111100 "G
0"I
0"J
#37
b00000000000000000000000000001010 )
b00000000000000000000000000001010 *
b011100011000111011101101101100010010110011111110010010100100100100 7
b101010111101101110110100100101011110001000110000001011100000001010 :
0"2
b001111001111010001001100100110011110100100000111001011000110001100 "3
b101010110001000110001101101100111111010100101110011010111000111101 "6
b101010110001000110001101101100111111010100101110011010111000111101 "/
b0001110 "=
b000000000000000000000000000000000000110101001110001000001100000010 ">
b011111001111101011110001100001111111011101100011100111011000100010 "A
1"D
0"<
1"I
1"J
#38
b1001001010010010000010010100111011000010 "G
0"I
0"J
#39
b00000000000000000000000000001011 )
b00000000000000000000000000001011 *
b101010110001000110001101101100111111010100101110011010111000111101 4
b011100011000111011101101101100010010110011111110010010100100100100 :
b01 E
b1010101100010001100011011011001111110101001011100110101110001111 P
b0001111 "=
b000000000000000000000000000000000000000000000000000000000000100100 ">
b101001001000001001010011101100001000110101001110001000001100000010 "A
b011111001111101011110001100001111111011101100011100111011000100010 "9
1"<
1"I
1"J
#40
b1100100010101101111100110010010011000000 "G
0"I
0"J
#41
b00000000000000000000000000001100 )
b00000000000000000000000000001100 *
b101010110001000110001101101100111111010100101110011010111000111101 7
1"2
b011111001111101011110001100001111111011101100011100111011000100010 "3
b001111001111010001001100100110011110100100000111001011000110001100 "6
b001111001111010001001100100110011110100100000111001011000110001100 "/
b0010000 "=
b000000000000000000000000000000000000000000000000000000000000000000 ">
b101001001000001001011100100010101101111100110010010011000000100100 "A
0"D
b101001001000001001010011101100001000110101001110001000001100000010 "9
1"I
1"J
#42
b0111000000000100111011001111001100100010 "G
0"I
0"J
#43
b00000000000000000000000000001101 )
b00000000000000000000000000001101 *
b001111001111010001001100100110011110100100000111001011000110001100 4
b101010110001000110001101101100111111010100101110011010111000111101 :
b00 E
b0011110011110100010011001001100111101001000001110010110001100011 P
0"2
b101001001000001001010011101100001000110101001110001000001100000010 "3
b011111001111101011110001100001111111011101100011100111011000100010 "6
b011111001111101011110001100001111111011101100011100111011000100010 "/
b0010001 "=
b000000000000000000000000000000000000000000000001110000000001001110 ">
b110011110011001000101100100010101101111100110010010011000000100100 "A
1"D
0"<
1"I
1"J
#44
b1110001010110110101011100011000001111101 "G
0"I
0"J
#45
b00000000000000000000000000001110 )
b00000000000000000000000000001110 *
b011111001111101011110001100001111111011101100011100111011000100010 4
b001111001111010001001100100110011110100100000111001011000110001100 7
b10 E
b0111110011111010111100011000011111110111011000111001110110001000 P
b0010010 "=
b000000000000000000000000000000000000000000000000000000000000000000 ">
b110011111000101011011010101110001100000111110101110000000001001110 "A
0"D
b110011110011001000101100100010101101111100110010010011000000100100 "9
1"<
1"I
1"J
#46
b1001111000010000100001010010111010111001 "G
0"I
0"J
#47
b00000000000000000000000000001111 )
b00000000000000000000000000001111 *
b011111001111101011110001100001111111011101100011100111011000100010 7
b001111001111010001001100100110011110100100000111001011000110001100 :
1"2
b110011110011001000101100100010101101111100110010010011000000100100 "3
b101001001000001001010011101100001000110101001110001000001100000010 "6
b101001001000001001010011101100001000110101001110001000001100000010 "/
b0010011 "=
b000000000000000000000000000000001001111000010000100001010010111010 ">
b111001111000101011011010101110001100000111110101110000000001001110 "A
1"D
0"<
1"I
1"J
#48
b0101100011111111101000000100010110001010 "G
0"I
0"J
#49
b00000000000000000000000000010000 )
b00000000000000000000000000010000 *
b101001001000001001010011101100001000110101001110001000001100000010 4
b011111001111101011110001100001111111011101100011100111011000100010 :
b1010010010000010010100111011000010001101010011100010000011000000 P
b0010100 "=
b000000000000000000000000000000000000000000000000000000000001011000 ">
b111111111010000001000101100010101001111000010000100001010010111010 "A
b111001111000101011011010101110001100000111110101110000000001001110 "9
1"<
1"I
1"J
#50
b0111001001011011010000001111101110101010 "G
0"I
0"J
